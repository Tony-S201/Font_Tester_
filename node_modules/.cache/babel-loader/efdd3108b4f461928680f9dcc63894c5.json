{"ast":null,"code":"var _jsxFileName = \"/var/www/html/BORDEL DE MERDE/Font_Tester_/src/App.js\";\n\n/**\n * NPM Import\n */\nimport React, { Component } from 'react';\nimport { Select, Switch, Slider, Icon } from 'antd';\nimport { SketchPicker } from 'react-color';\n/**\n * LOCAL Import\n */\n\nimport './App.css';\nimport Arial from './Arial';\nimport Footer from './Footer';\nimport { FontList } from './FontList';\n/**\n * CODE Here\n */\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentFontComponent: undefined,\n      currentFontWeight: undefined,\n      themeFontColor: '#000000',\n      inputBackgroundColor: '#FFFFFF',\n      colorPicker: undefined,\n      currentSize: undefined,\n      currentFontStyle: undefined,\n      currentLogo: 'on' // Add the select option value to the state at currentFont\n\n    };\n\n    this.onChangeFont = value => {\n      console.log(\"selected \".concat(value));\n      let currentFontComponent = value.charAt(0).toUpperCase() + value.slice(1);\n      this.setState({\n        currentFontComponent\n      });\n    };\n\n    this.onChangeFontWeight = value => {\n      let currentFontWeight = value;\n      this.setState({\n        currentFontWeight\n      });\n    };\n\n    this.onChangeTheme = checked => {\n      if (checked === false) {\n        document.body.style.backgroundColor = '#FFFFFF';\n        this.setState({\n          themeFontColor: '#000000',\n          inputBackgroundColor: '#FFFFFF',\n          currentLogo: 'on'\n        });\n      } else {\n        document.body.style.backgroundColor = '#2F2E33';\n        this.setState({\n          themeFontColor: '#FFFFFF',\n          inputBackgroundColor: '#2F2E33',\n          currentLogo: 'off'\n        });\n      }\n    };\n\n    this.onChangeFontStyle = value => {\n      let currentFontStyle = value;\n      this.setState({\n        currentFontStyle\n      });\n    };\n\n    this.onPickerChange = color => {\n      this.setState({\n        colorPicker: color.hex\n      });\n    };\n\n    this.onSizeChange = value => {\n      this.setState({\n        currentSize: value\n      });\n    };\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n  }\n\n  render() {\n    const Option = Select.Option;\n    const _this$state = this.state,\n          currentFontComponent = _this$state.currentFontComponent,\n          currentFontWeight = _this$state.currentFontWeight,\n          themeFontColor = _this$state.themeFontColor,\n          inputBackgroundColor = _this$state.inputBackgroundColor,\n          colorPicker = _this$state.colorPicker,\n          currentSize = _this$state.currentSize,\n          currentFontStyle = _this$state.currentFontStyle,\n          currentLogo = _this$state.currentLogo;\n    return React.createElement(\"div\", {\n      id: \"big-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/font_tester.png\",\n      className: \"bigImage\",\n      alt: \"website logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"switchTheme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      id: \"switchTheme\",\n      style: {\n        color: themeFontColor,\n        fontFamily: 'Roboto, sans-serif'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Switch theme \"), React.createElement(Switch, {\n      onChange: this.onChangeTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      id: \"subtitle\",\n      style: {\n        color: themeFontColor,\n        fontFamily: 'Roboto, sans-serif'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"A selection of my favorites fonts !\"), React.createElement(\"div\", {\n      id: \"selectList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      dropdownStyle: {\n        backgroundColor: inputBackgroundColor\n      },\n      placeholder: \"Select a font\",\n      optionFilterProp: \"children\",\n      onChange: this.onChangeFont,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, FontList.map(thefont => React.createElement(Option, {\n      key: thefont.font,\n      value: thefont.font,\n      style: {\n        fontFamily: \"\".concat(thefont.font, \", sans-serif\"),\n        fontWeight: \"\".concat(currentFontWeight),\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, thefont.font)))), React.createElement(\"div\", {\n      className: \"selectElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      dropdownStyle: {\n        backgroundColor: inputBackgroundColor\n      },\n      placeholder: \"Select a font-weight\",\n      optionFilterProp: \"children\",\n      onChange: this.onChangeFontWeight,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"normal\",\n      style: {\n        fontWeight: 'normal',\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Normal\"), React.createElement(Option, {\n      value: \"bold\",\n      style: {\n        fontWeight: 'bold',\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Bold\"))), React.createElement(\"div\", {\n      className: \"selectElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      dropdownStyle: {\n        backgroundColor: inputBackgroundColor\n      },\n      placeholder: \"Select a font-style\",\n      optionFilterProp: \"children\",\n      onChange: this.onChangeFontStyle,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"normal\",\n      style: {\n        fontStyle: 'normal',\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"None\"), React.createElement(Option, {\n      value: \"italic\",\n      style: {\n        fontStyle: 'italic',\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Italic\")))), React.createElement(\"div\", {\n      id: \"sizeElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: themeFontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"font-size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Slider, {\n      defaultValue: 14,\n      max: 48,\n      onChange: this.onSizeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"bottomZone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"leftSide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: themeFontColor,\n        fontFamily: 'Roboto, sans-serif'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Pick a color\"), React.createElement(SketchPicker, {\n      onChangeComplete: this.onPickerChange,\n      color: colorPicker,\n      disableAlpha: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Arial, {\n      currentFontComponent: currentFontComponent,\n      currentFontWeight: currentFontWeight,\n      themeFontColor: themeFontColor,\n      colorPicker: colorPicker,\n      currentSize: currentSize,\n      currentFontStyle: currentFontStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n}\n/**\n* Export\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/BORDEL DE MERDE/Font_Tester_/src/App.js"],"names":["React","Component","Select","Switch","Slider","Icon","SketchPicker","Arial","Footer","FontList","App","state","currentFontComponent","undefined","currentFontWeight","themeFontColor","inputBackgroundColor","colorPicker","currentSize","currentFontStyle","currentLogo","onChangeFont","value","console","log","charAt","toUpperCase","slice","setState","onChangeFontWeight","onChangeTheme","checked","document","body","style","backgroundColor","onChangeFontStyle","onPickerChange","color","hex","onSizeChange","onBlur","onFocus","onSearch","val","render","Option","fontFamily","width","input","option","props","children","toLowerCase","indexOf","map","thefont","font","fontWeight","fontStyle"],"mappings":"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","sourcesContent":["/**\n * NPM Import\n */\nimport React, { Component } from 'react';\nimport { Select, Switch, Slider, Icon } from 'antd';\nimport { SketchPicker } from 'react-color';\n/**\n * LOCAL Import\n */\nimport './App.css';\nimport Arial from './Arial';\nimport Footer from './Footer';\nimport { FontList } from './FontList';\n\n/**\n * CODE Here\n */\nclass App extends Component {\n  state = {\n    currentFontComponent: undefined,\n    currentFontWeight : undefined,\n    themeFontColor : '#000000',\n    inputBackgroundColor: '#FFFFFF',\n    colorPicker: undefined,\n    currentSize : undefined,\n    currentFontStyle: undefined,\n    currentLogo: 'on',\n  }  \n  \n  // Add the select option value to the state at currentFont\n  onChangeFont = value => {\n    console.log(`selected ${value}`)\n    let currentFontComponent = value.charAt(0).toUpperCase() + value.slice(1);\n    this.setState({ currentFontComponent })\n  }\n  \n  onChangeFontWeight = value => {\n    let currentFontWeight = value;\n    this.setState({ currentFontWeight })\n  }\n\n  \n  onChangeTheme = checked => {\n    if (checked === false) {\n      document.body.style.backgroundColor = '#FFFFFF';\n      this.setState({themeFontColor: '#000000', inputBackgroundColor: '#FFFFFF', currentLogo: 'on'});\n    } else {\n      document.body.style.backgroundColor = '#2F2E33';\n      this.setState({themeFontColor: '#FFFFFF', inputBackgroundColor: '#2F2E33', currentLogo: 'off'});\n    }\n  }\n\n  onChangeFontStyle = value => {\n    let currentFontStyle = value;\n    this.setState({ currentFontStyle })\n  }\n\n  onPickerChange = (color) => {\n    this.setState({colorPicker: color.hex})\n  }\n\n  onSizeChange = (value) => {\n    this.setState({currentSize: value})\n  }\n  // onTextChange = () => {\n  //   this.setState({myText: !this.state.myText})\n  // }\n\n  onBlur = () => {\n    console.log('blur')\n  }\n\n  onFocus = () => {\n    console.log('focus')\n  }\n\n  onSearch = (val) => {\n    console.log('search:', val)\n  }\n\n\n  render () {\n    const { Option } = Select\n    const { currentFontComponent, currentFontWeight, themeFontColor, inputBackgroundColor, colorPicker, currentSize, currentFontStyle, currentLogo } = this.state    \n    return (\n      <div id=\"big-wrapper\">\n        <img src=\"/font_tester.png\" className=\"bigImage\" alt=\"website logo\" />\n        <div className=\"switchTheme\">\n          <strong id=\"switchTheme\" style={{color: themeFontColor, fontFamily: 'Roboto, sans-serif'}}>Switch theme </strong>\n          <Switch onChange={this.onChangeTheme} />\n        </div>\n\n        <h2 id=\"subtitle\" style={{color: themeFontColor, fontFamily: 'Roboto, sans-serif'}}>A selection of my favorites fonts !</h2>\n\n        <div id=\"selectList\">\n          <div className=\"selectElement\">\n            <strong style={{color: themeFontColor}}><Icon type=\"medium\" /></strong>\n            {/* This is the Select from antd, onChange with option choice execute the onChange function */}\n            <Select\n              showSearch\n              style={{ width: 200}}\n              dropdownStyle={{backgroundColor: inputBackgroundColor}}\n              placeholder=\"Select a font\"\n              optionFilterProp=\"children\"\n              onChange={this.onChangeFont}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              onSearch={this.onSearch}\n              filterOption={(input, option) =>\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {FontList.map(thefont => (\n                <Option key={thefont.font} value={thefont.font} style={{fontFamily: `${thefont.font}, sans-serif`, fontWeight: `${currentFontWeight}`, color: themeFontColor}}>{thefont.font}</Option>\n              ))}\n            </Select>\n          </div>\n          <div className=\"selectElement\">\n            <strong style={{color: themeFontColor}}><Icon type=\"bold\" /></strong>  \n            <Select\n              showSearch\n              style={{ width: 200 }}\n              dropdownStyle={{backgroundColor: inputBackgroundColor}}\n              placeholder=\"Select a font-weight\"\n              optionFilterProp=\"children\"\n              onChange={this.onChangeFontWeight}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              onSearch={this.onSearch}\n              filterOption={(input, option) =>\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Option value=\"normal\" style={{fontWeight: 'normal', color: themeFontColor}}>Normal</Option>\n              <Option value=\"bold\" style={{fontWeight: 'bold', color: themeFontColor}}>Bold</Option>\n            </Select>\n          </div>\n          <div className=\"selectElement\">\n            <strong style={{color: themeFontColor}}><Icon type=\"italic\" /></strong>  \n            <Select\n              showSearch\n              style={{ width: 200 }}\n              dropdownStyle={{backgroundColor: inputBackgroundColor}}\n              placeholder=\"Select a font-style\"\n              optionFilterProp=\"children\"\n              onChange={this.onChangeFontStyle}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              onSearch={this.onSearch}\n              filterOption={(input, option) =>\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Option value=\"normal\" style={{fontStyle: 'normal', color: themeFontColor}}>None</Option>\n              <Option value=\"italic\" style={{fontStyle: 'italic', color: themeFontColor}}>Italic</Option>\n            </Select>\n          </div>\n        </div>\n\n        <div id=\"sizeElement\">\n          <strong style={{color: themeFontColor}}><Icon type=\"font-size\" /></strong>\n          <Slider defaultValue={14} max={48} onChange={this.onSizeChange} />\n        </div>\n  \n        <div id=\"bottomZone\">\n          <div id=\"leftSide\">\n            <span style={{color: themeFontColor, fontFamily: 'Roboto, sans-serif'}}>Pick a color</span>\n            <SketchPicker onChangeComplete={this.onPickerChange} color={colorPicker} disableAlpha />\n          </div>\n          <Arial currentFontComponent={currentFontComponent} currentFontWeight={currentFontWeight} themeFontColor={themeFontColor} colorPicker={colorPicker} currentSize={currentSize} currentFontStyle={currentFontStyle} /> \n        </div>\n\n      </div>\n    )\n  }\n}\n\n /**\n* Export\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}