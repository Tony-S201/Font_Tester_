{"ast":null,"code":"var _jsxFileName = \"/var/www/html/BORDEL DE MERDE/Font_Tester_/src/App.js\";\n\n/**\n * NPM Import\n */\nimport React, { Component } from 'react';\nimport { Select } from 'antd';\n/**\n * LOCAL Import\n */\n\nimport './App.css';\nimport Arial from './Arial';\n/**\n * CODE Here\n */\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentFontComponent: undefined,\n      myText: undefined // Add the select option value to the state at currentFont\n\n    };\n\n    this.onChange = value => {\n      console.log(\"selected \".concat(value));\n      let currentFontComponent = value.charAt(0).toUpperCase() + value.slice(1);\n      this.setState({\n        currentFontComponent\n      });\n    };\n\n    this.onTextChange = e => {\n      this.setState({\n        myText: !this.state.myText.e\n      });\n    };\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n  }\n\n  render() {\n    const Option = Select.Option;\n    const currentFontComponent = this.state.currentFontComponent;\n    const onTextChange = this.onTextChange.onTextChange;\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Font Tester\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"A selection of my favorites fonts that you can try !\"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Choose your font : \"), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Select a font\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"arial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Arial\"), React.createElement(Option, {\n      value: \"verdana\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Verdana\")), React.createElement(Arial, {\n      onTextChange: onTextChange,\n      currentFontComponent: currentFontComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n/**\n* Export\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/BORDEL DE MERDE/Font_Tester_/src/App.js"],"names":["React","Component","Select","Arial","App","state","currentFontComponent","undefined","myText","onChange","value","console","log","charAt","toUpperCase","slice","setState","onTextChange","e","onBlur","onFocus","onSearch","val","render","Option","width","input","option","props","children","toLowerCase","indexOf"],"mappings":";;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA;;;;AAGA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA;;;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,oBAAoB,EAAEC,SADhB;AAENC,MAAAA,MAAM,EAAED,SAFF,CAKR;;AALQ,KADkB;;AAAA,SAO1BE,QAP0B,GAOfC,KAAK,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,oBAAwBF,KAAxB;AACA,UAAIJ,oBAAoB,GAAGI,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCJ,KAAK,CAACK,KAAN,CAAY,CAAZ,CAA3D;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KAXyB;;AAAA,SAa1BW,YAb0B,GAaVC,CAAD,IAAO;AACpB,WAAKF,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE,CAAC,KAAKH,KAAL,CAAWG,MAAX,CAAkBU;AAA5B,OAAd;AACD,KAfyB;;AAAA,SAiB1BC,MAjB0B,GAiBjB,MAAM;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAnByB;;AAAA,SAqB1BQ,OArB0B,GAqBhB,MAAM;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAvByB;;AAAA,SAyB1BS,QAzB0B,GAyBdC,GAAD,IAAS;AAClBX,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,GAAvB;AACD,KA3ByB;AAAA;;AA8B1BC,EAAAA,MAAM,GAAI;AAAA,UACAC,MADA,GACWtB,MADX,CACAsB,MADA;AAAA,UAEAlB,oBAFA,GAEyB,KAAKD,KAF9B,CAEAC,oBAFA;AAAA,UAGAW,YAHA,GAGiB,KAAKA,YAHtB,CAGAA,YAHA;AAIR,WACE,0CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,EAME,oBAAC,MAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,gBAAgB,EAAC,UAJnB;AAKE,MAAA,QAAQ,EAAE,KAAKhB,QALjB;AAME,MAAA,OAAO,EAAE,KAAKW,OANhB;AAOE,MAAA,MAAM,EAAE,KAAKD,MAPf;AAQE,MAAA,QAAQ,EAAE,KAAKE,QARjB;AASE,MAAA,YAAY,EAAE,CAACK,KAAD,EAAQC,MAAR,KACdA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CL,KAAK,CAACI,WAAN,EAA5C,KAAoE,CAVtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,EAcE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,CANF,EAwBE,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAEb,YAArB;AAAmC,MAAA,oBAAoB,EAAEX,oBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADF;AA6BD;;AA/DyB;AAkE3B;;;;;AAGD,eAAeF,GAAf","sourcesContent":["/**\n * NPM Import\n */\nimport React, { Component } from 'react';\nimport { Select } from 'antd';\n\n/**\n * LOCAL Import\n */\nimport './App.css';\nimport Arial from './Arial';\n\n/**\n * CODE Here\n */\nclass App extends Component {\n  state = {\n    currentFontComponent: undefined,\n    myText: undefined,\n  }\n\n  // Add the select option value to the state at currentFont\n  onChange = value => {\n    console.log(`selected ${value}`)\n    let currentFontComponent = value.charAt(0).toUpperCase() + value.slice(1);\n    this.setState({ currentFontComponent })\n  }\n\n  onTextChange = (e) => {\n    this.setState({myText: !this.state.myText.e})\n  }\n\n  onBlur = () => {\n    console.log('blur')\n  }\n\n  onFocus = () => {\n    console.log('focus')\n  }\n\n  onSearch = (val) => {\n    console.log('search:', val)\n  }\n\n\n  render () {\n    const { Option } = Select\n    const { currentFontComponent } = this.state\n    const { onTextChange } = this.onTextChange\n    return (\n      <>\n\n        <h1>Font Tester</h1>\n        <h2>A selection of my favorites fonts that you can try !</h2>\n        <strong>Choose your font : </strong>\n        {/* This is the Select from antd, onChange with option choice execute the onChange function */}\n        <Select\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Select a font\"\n          optionFilterProp=\"children\"\n          onChange={this.onChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onSearch={this.onSearch}\n          filterOption={(input, option) =>\n          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n        >\n          <Option value=\"arial\">Arial</Option>\n          <Option value=\"verdana\">Verdana</Option>\n        </Select>\n\n\n        <Arial onTextChange={onTextChange} currentFontComponent={currentFontComponent} />\n\n      </>\n    )\n  }\n}\n\n /**\n* Export\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}